---
---
@article{AgriSegment,
  title={Advancing Agricultural Field Segmentation Using Deep Learning},
  year={2024},
  timeline={2024-Present},
  preview={parameter.png},
  description={
    Agricultural field segmentation using deep learning models to identify crop types, weeds, and soil. The project aims to develop a robust and efficient model for field segmentation using satellite images.
    <br><br><b>Tools and Technology:</b> Python (Pytorch), OpenCV
  },
  field={Computer Vision, Machine Learning, Deep Learning},
  supervisor={ <a href="https://cse.buet.ac.bd/faculty_list/detail/msrahman"> Dr. M. Sohel Rahman (Professor, CSE, BUET)</a>}
}


@article{haider2024promptingfinetuninglargelanguage,
  title={Advancing Automatic Code Review and Code Refinement Generation Using Large Language Models},
  year={2024},
  timeline={2023-2024 (<a href="https://arxiv.org/abs/2411.10129">ArXiv</a>)},
  preview={codereview.png},
  description={
    Prompting and PEFT techniques, augmenting static program metadata (function call graph) and natural language summary with human evaluation to improve code review and code refinement generation tasks
    <br><br><b>Tools and Technology:</b> Python (Pytorch), TreeSitter, OpenAI GPT API, CodeT5, CodeReviewer, CodeLlama
  },
  field={Undergraduate Thesis, Software Engineering, Machine Learning, Natural Language Processing}, 
  supervisor={ <a href="https://cse.buet.ac.bd/faculty_list/detail/anindyaiqbal"> Dr. Anindya Iqbal (Professor, CSE, BUET)</a>, <a href="https://toufiqueparag.github.io/toufique.github.io/"> Dr. Toufique Ahmed (Postdoc, CS, UC Davis) </a>},
  abstract={Generating accurate code review comments remains a significant challenge due to the inherently diverse and non-unique nature of the task output. Large language models pretrained on both programming and natural language data tend to perform well in code-oriented tasks. However, large-scale pretraining is not always feasible due to its environmental impact and project-specific generalizability issues. In this work, first we fine-tune open-source Large language models (LLM) in parameter-efficient, quantized low-rank (QLoRA) fashion on consumer-grade hardware to improve review comment generation. Recent studies demonstrate the efficacy of augmenting semantic metadata information into prompts to boost performance in other code-related tasks. To explore this in code review activities, we also prompt proprietary, closed-source LLMs augmenting the input code patch with function call graphs and code summaries. Both of our strategies improve the review comment generation performance, with function call graph augmented few-shot prompting on the GPT-3.5 model surpassing the pretrained baseline by around 90% BLEU-4 score on the CodeReviewer dataset. Moreover, few-shot prompted Gemini-1.0 Pro, QLoRA fine-tuned Code Llama and Llama 3.1 models achieve competitive results (ranging from 25% to 83% performance improvement) on this task. An additional human evaluation study further validates our experimental findings, reflecting real-world developers' perceptions of LLM-generated code review comments based on relevant qualitative metrics. <br>}
}


@article{FasterMawsSA,
  title={Faster and Improved CD-MAWS with Suffix Automata},
  year={2024},
  timeline={2024 (Accepted at <a href="https://tcsuestc.com/walcom2025/pages/accepted.html">WALCOM 2025</a>)},
  preview={},
  description={
   Introduced a refined CD-MAWS method for phylogeny estimation, significantly reducing computational complexity from max(O(mn ), O(mn log n)) to max(O(mn ), O(mnk)) while maintaining tree quality, through a revised cosine distance calculation method, binary encoding of MAWs, and the adoption of suffix automata for MAW generation.
  },
  field={Suffix Automata, BioInformatics},
  supervisor={ <a href="https://scholar.google.com/citations?user=9d52x-cAAAAJ&hl=en"> Dr. M. Saifur Rahman (Professor, CSE, BUET) </a>},
  abstract={The Cosine Distance on Minimal Absent Word Sets, CD-MAWS in short, was recently introduced for alignment-free phylogeny estimation. Here we introduce a refined CD-MAWS method, significantly reducing computational complexity from O(max(km3n, km2n log n)) to O(max(m2n, kmn)) while maintaining tree quality. Here, m is the number of species, n is the size of the whole genome of a species, and k is the maximum length of a minimal absent word (MAW). This advancement is achieved through a revised cosine distance calculation method, binary encoding of MAWs, and the adoption of suffix automata for MAW generation, addressing the main computational bottleneck and setting a better runtime for alignment-free phylogenetic analysis.<br>}
}
